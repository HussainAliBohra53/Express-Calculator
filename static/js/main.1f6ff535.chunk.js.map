{"version":3,"sources":["Js/VarUtility.js","Components/KeyPad.js","Js/FormulaClass.js","Js/MathUtility.js","Js/FormulaUtility.js","Components/SampleContext.js","Components/CalculatorPad.js","Js/KeyPadUtility.js","Components/VarListHolder.js","Components/PopupFrame.js","Components/FormulaComponent.js","App.js","reportWebVitals.js","index.js"],"names":["validateVarName","varName","varList","length","status","msg","test","indexOf","has","copyVarMap","m","Map","key","value","set","expTracker","tracker","opr","console","log","varlist","varTracker","fxlist","fxTracker","c","get","delete","KeyPadComponent","props","useState","isInv","setIsInv","angle","changeAngle","e","setAngle","name","onClick","useEffect","id","style","display","className","width","backgroundColor","color","target","ReactHtmlParser","colSpan","FxClass","Copy","F","expDisplayString","expString","desc","result","VarUtility","fxList","Reset","this","simplefxList","Object","fromEntries","Array","from","entries","toObj","config","angles","math","create","all","replacements","forEach","fn","fnNumber","x","Math","PI","typed","map","calculateWithScope","scope","evaluate","isNaN","toString","error","message","arrayToString","lst","exp","scopeGeneratorFromMap","shallowCopyFxList","newfxList","objToFxClass","obj","instance","validateFunctionName","fxName","fxs","import","override","ExpContext","createContext","ExpProvider","children","a","JSON","parse","localStorage","getItem","setExpString1","setExpDisplayString1","Number","setResult1","updateVarList1","updateVarList","vars","setItem","stringify","expStack","updateExpStack1","expDisplayStack","updateExpDisplayStack1","elemTracker","updateElemTracker1","updateElemTracker","track","json","newMap","fxUtility","updateFxList1","updateTracker1","setError1","setError","err","setResult","setExpString","str","setExpDisplayString","updateExpDisplayStack","updateExpStack","updateTracker","t","updateFxList","sampleMap","reset","Provider","resetAll","CalculatorPad","context","useContext","postBackspace","n","substring","title","letterSpacing","overflowX","alert","includes","OnAddFxClick","displayModalgetVarName","KeyPad","event","bname","pop","push","KeypadUtility","arr1","arr2","Texpstring","MathUtility","r","Texpdisstring","expStr","expDisStr","VarHolder","maxWidth","overflow","whiteSpace","textOverflow","onChange","valueChange","VarListHolder","varValueChangeHandler","OnVarChange","OndeleteVar","deleteVar","OnaddVarClick","PopupFrame","position","height","flexDirection","justifyContent","top","heading","ModelGetVarName","input","setInput","st","placeholder","OnSave","ModelGetFxName","setMsg","s","FxHolder","fxData","data","isExpanded","setExpanded","OnFxChange","onVarChange","varmap","Utility2","fxs2","HtmlParser","FxListHolder","fxCopy","FxUtility","OnDeleteFx","OnAddFx","fontSize","size","AppV2","displayVarModal","setDisplayVarModal","displayFxModal","setDisplayFxModal","document","closeModal","newFx","Fx","Flist","fontFamily","alignContent","l1","l2","l3","list","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1f6ff535.chunk.js","sourcesContent":["export function newVar(varList,varName,varValue){\r\nlet vars= copyVarMap(varList);\r\nvars.set(varName,varValue);\r\nreturn vars;\r\n}\r\nexport function validateVarName(varName,varList){\r\n   let format = /[!@#$%^&*()+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\r\n   if(varName==\"\"||varName.length==0){\r\n       return {status:true,msg:\"please enter some value.\"};\r\n   }\r\n   if(format.test(varName)){\r\n    return {status:false,msg:\"special characters are not allowed.\"};\r\n   }\r\n   if(varName.indexOf(' ') >= 0){\r\n       return {status:false,msg:\"space is not allowed.\"};\r\n}\r\n   if(varList.has(varName)){\r\n       return {status:false,msg:\"\"+varName+\" already exist.\"};\r\n   }\r\n   return {status:true,msg:\"\"};\r\n}\r\n\r\nexport function canDelete(varName){\r\n    return true;\r\n}\r\nexport function copyVarMap(varList){\r\n    let m=new Map();\r\n    for(let[key,value] of varList){\r\n      m.set(key,value);\r\n    }\r\n    return m;\r\n}\r\nexport function addVarToStacks(expStack,expDisplayStack,elemTracker,varName){\r\nlet l1=[...expStack];\r\nlet l2=[...expDisplayStack];\r\nlet l3=[...elemTracker];\r\nl1.push('(v_'+varName+')');\r\nl2.push('<span style=\"color:blue\">'+varName+'</span>');\r\nl3.push('var');\r\nreturn {'expStr':l1,'expDisStr':l2,'elemTracker':l3};\r\n}\r\n\r\n   \r\nexport function expTracker(tracker,opr,key){\r\n    \r\n    console.log(\"recieved tracker\");\r\n    console.log(tracker);\r\n    let varlist=copyVarMap(tracker.varTracker);\r\n    let fxlist=copyVarMap(tracker.fxTracker);\r\n    switch(opr){\r\n        case 'addVar':{\r\n        if(varlist.has(key)){\r\n        let c=varlist.get(key);\r\n        console.log(\"add var\");\r\n        c++;\r\n        varlist.set(key,c);\r\n        }else{\r\n            varlist.set(key,1);    \r\n        }\r\n        }\r\n        break;\r\n        case 'addFx':{\r\n            if(fxlist.has(key)){    \r\n                let c=fxlist.get(key);\r\n                c++;\r\n                fxlist.set(key,c);\r\n                }else{\r\n                    fxlist.set(key,1);\r\n                }\r\n        }\r\n        break;\r\n        case 'removeVar':{\r\n            if(varlist.has(key)){\r\n                let c=varlist.get(key);\r\n                c--;\r\n                if(c==0){\r\n                    varlist.delete(key);\r\n                }else{         \r\n                    varlist.set(key,c);\r\n                }\r\n        }\r\n       }\r\n        break;\r\n        case 'removeFx':{\r\n            if(fxlist.has(key)){\r\n                let c=fxlist.get(key);\r\n                c--;\r\n                if(c==0){\r\n                    fxlist.delete(key);\r\n                }else{         \r\n                    fxlist.set(key,c);\r\n                }\r\n        }\r\n        }\r\n    }\r\nreturn {'varTracker':varlist,'fxTracker':fxlist};    \r\n}\r\nexport function updateFxWithTracker(tracker,Fx,varList,Flist){\r\n    let fxs=new Map();\r\n    let vars=new Map();\r\n\r\nfor(let [key,value] of tracker.varTracker){\r\n    vars.set(key,varList.get(key));\r\n}\r\nfor(let [key,value] of tracker.fxTracker){\r\n    fxs.set(key,Flist.get(key).Copy());\r\n    }\r\nFx.varList=vars;\r\nFx.fxList=fxs;\r\nconsole.log(\"Fx after tracer update\");\r\nconsole.log(Fx);\r\nreturn Fx;\r\n}","\r\nimport React, {useEffect,useState} from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport './../css/keypad.css';\r\nfunction KeyPadComponent(props){\r\n    const [isInv, setIsInv]=useState(false);\r\n    let angle=props.angle;\r\n    function changeAngle(e){\r\n    props.setAngle(e.name);\r\n    angle=e.name;\r\n    props.onClick(e);\r\n    }\r\n    useEffect(()=>{\r\n        console.log(\"is inv changed\");\r\n    },[isInv])\r\n    function btnInv_click(){\r\n    setIsInv(!isInv);\r\n    }\r\n        return (\r\n                <div id=\"keypad\" style={{display:'flex'}} className=\"table table-hover w-100\">\r\n                <table width=\"100%\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                            \r\n                                <button className=\"btn w-100\" name=\"rad\" style={{backgroundColor:angle==='rad'?'#292b2c':'white',color:angle==='rad'?'white':'black'}} onClick={e => changeAngle(e.target)}>Rad</button>\r\n                                \r\n                            </td>\r\n                            <td>\r\n                                \r\n                                <button className=\"btn w-100\" name=\"deg\" style={{backgroundColor:angle==='deg'?'#292b2c':'white',color:angle==='deg'?'white':'black'}} onClick={e => changeAngle(e.target)}>Deg</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"!\" onClick={e => props.onClick(e.target)}>x!</button>\r\n                                 \r\n                            </td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"Inv\" onClick={btnInv_click}>Inv</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name={isInv?'asin':'sin'} onClick={e => props.onClick(e.target)}>{isInv?ReactHtmlParser('sin<sup>-1</sup>'):'sin'}</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"ln\" onClick={e => props.onClick(e.target)}>ln</button>\r\n                                 \r\n                            </td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"pi\" onClick={e => props.onClick(e.target)}>&#x3C0;</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                               \r\n                                <button className=\"btn w-100\" name={isInv?'acos':'cos'} onClick={e => props.onClick(e.target)}>{isInv?ReactHtmlParser('cos<sup>-1</sup>'):'cos'}</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"log\" onClick={e => props.onClick(e.target)}>Log</button>\r\n                                 \r\n                            </td>\r\n                        </tr> \r\n                        <tr>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"e\" onClick={e => props.onClick(e.target)}>e</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name={isInv?'atan':'tan'} onClick={e => props.onClick(e.target)}>{isInv?ReactHtmlParser('tan<sup>-1</sup>'):'tan'}</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"root\" onClick={e => props.onClick(e.target)}>&#8730;</button>\r\n                                 \r\n                            </td>\r\n                        </tr>  \r\n                        <tr>\r\n                            <td colSpan=\"2\">\r\n                                <button className=\"btn w-100\" name=\"reset\" onClick={e => props.onClick(e.target)}>reset</button>\r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"pow\" onClick={e => props.onClick(e.target)}>x<sup>y</sup></button>\r\n                                 \r\n                            </td>\r\n                        </tr> \r\n                    </tbody>\r\n                </table>                \r\n                <table width='100%'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"(\" onClick={e => props.onClick(e.target)}>(</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\")\" onClick={e => props.onClick(e.target)}>)</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"%\" onClick={e => props.onClick(e.target)}>%</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"CE\" onClick={e => props.onClick(e.target)} >&#8592;</button>\r\n                                 \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"7\" onClick={e => props.onClick(e.target)}>7</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"8\" onClick={e => props.onClick(e.target)}>8</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"9\" onClick={e => props.onClick(e.target)}>9</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"/\" onClick={e => props.onClick(e.target)}>/</button>\r\n                                 \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"4\" onClick={e => props.onClick(e.target)}>4</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"5\" onClick={e => props.onClick(e.target)}>5</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"6\" onClick={e => props.onClick(e.target)}>6</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"*\" onClick={e => props.onClick(e.target)}>x</button>\r\n                                 \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"1\" onClick={e => props.onClick(e.target)}>1</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"2\" onClick={e => props.onClick(e.target)}>2</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"3\" onClick={e => props.onClick(e.target)}>3</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"-\" onClick={e => props.onClick(e.target)}>-</button>\r\n                                 \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"0\" onClick={e => props.onClick(e.target)}>0</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\".\" onClick={e => props.onClick(e.target)}>.</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"=\" onClick={e => props.onClick(e.target)}>=</button>\r\n                                 \r\n                            </td>\r\n                            <td>\r\n                                 \r\n                                <button className=\"btn w-100\" name=\"+\" onClick={e => props.onClick(e.target)}>+</button>\r\n                                 \r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>  \r\n                </div>\r\n            \r\n        );\r\n    }\r\nexport default KeyPadComponent;","import * as VarUtility from './VarUtility';\r\nexport class FxClass{\r\n    constructor(name){\r\n        this.name=name;\r\n        this.result='';\r\n        this.desc='';\r\n        this.varList=new Map();\r\n        this.fxList=new Map();\r\n        this.expString='';\r\n        this.expDisplayString='';        \r\n    }\r\n     \r\n       toObj() {\r\n        //get serialisible fields\r\n        const {name,result,desc,expString, expDisplayString,varList,fxList} = this;\r\n        \r\n        //convert complex object representation JSON serialisible format\r\n        const simplefxList= Object.fromEntries(   //convert map to plain object\r\n          Array.from(\r\n            fxList.entries(),                      //transform the map\r\n            ([key, value]) => [key, value.toObj()] //convert map values to plain objects\r\n          )\r\n        );\r\n        const simplevarList=Object.fromEntries(varList);\r\n        //return plain object \r\n        return {\r\n          name,\r\n          result,\r\n          desc,\r\n          expString,\r\n          expDisplayString,\r\n          varList:simplevarList,\r\n          fxList:simplefxList\r\n        }\r\n      }\r\n\r\n   Copy=()=>{\r\n    let F=new FxClass(this.name);\r\n    F.expDisplayString=this.expDisplayString;\r\n    F.expString=this.expString;\r\n    F.desc=this.desc;\r\n    F.result=this.result;\r\n    F.varList=VarUtility.copyVarMap(this.varList);\r\n    for(let[key,value] of this.fxList){\r\n        F.fxList.set(key,value.Copy());\r\n    }\r\n    return F;\r\n    }\r\n    Reset=()=>{\r\n        this.result='';\r\n        this.expDisplayString='';\r\n        this.expString='';\r\n        this.fxList=new Map();\r\n        this.varList=new Map();\r\n        this.desc='';\r\n    }\r\n}\r\n","import {create,all, map, exp} from 'mathjs';\r\nexport const config={angles:'deg'};\r\nconst math = create(all, config);\r\nconst fns1 = ['sin', 'cos', 'tan', 'sec', 'cot', 'csc'];\r\nlet replacements={};\r\nfns1.forEach(function(name) {\r\n  const fn = math[name] // the original function\r\n  console.log(math);\r\n  const fnNumber = function (x) {\r\n    // convert from configured type of angles to radians\r\n    switch (config.angles) {\r\n      case 'deg':\r\n        return fn(x / 360 * 2 * Math.PI)\r\n      case 'grad':\r\n        return fn(x / 400 * 2 * Math.PI)\r\n      default:\r\n        return fn(x)\r\n    }\r\n  }\r\n\r\n  // create a typed-function which check the input types\r\n\r\n  replacements[name] = math.typed(name, {\r\n    'number': fnNumber,\r\n    'Array | Matrix': function (x) {\r\n      return math.map(x, fnNumber)\r\n    }\r\n  })\r\n})\r\n\r\nconst fns2 = ['asin', 'acos', 'atan', 'atan2', 'acot', 'acsc', 'asec']\r\nfns2.forEach(function(name) {\r\n  const fn = math[name] // the original function\r\n\r\n  const fnNumber = function (x) {\r\n    const result = fn(x)\r\n\r\n    if (typeof result === 'number') {\r\n      // convert to radians to configured type of angles\r\n      switch(config.angles) {\r\n        case 'deg':  return result / 2 / Math.PI * 360\r\n        case 'grad': return result / 2 / Math.PI * 400\r\n        default: return result\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  // create a typed-function which check the input types\r\n  replacements[name] = math.typed(name, {\r\n    'number': fnNumber,\r\n    'Array | Matrix': function (x) {\r\n      return math.map(x, fnNumber)\r\n    }\r\n  })\r\n})\r\nmath.import(replacements, {override: true});\r\nexport function calculate(expString){\r\ntry{\r\n    let result=math.evaluate(expString);\r\n    if(!isNaN(result)) return result.toString();\r\n    return 'error';\r\n}catch(e){\r\n  console.log(e.msg);\r\nreturn 'error'\r\n}\r\n}\r\nexport function calculateWithScope(expString,scope){\r\n  console.log(\"expstring\"+expString);\r\n  console.log(scope);\r\n  try{\r\n      let result=math.evaluate(expString,scope);\r\n      if(!isNaN(result)) return {result:result.toString(),status:'ok',error:''}\r\n      return {result:result.toString(),status:'img',error:'imaginary value not supported'};\r\n  }catch(e){\r\n   \r\n  return {result:'',status:'err',error:e.message};\r\n  }\r\n  }\r\nexport function arrayToString(lst){\r\n    let exp='';\r\n    for(let values of lst){\r\n    exp+=values;\r\n    }\r\n    return exp;\r\n    }\r\n \r\nexport function scopeGenerator(varList){\r\n  let scope=Object.fromEntries(varList);\r\n  return scope;\r\n}\r\nexport function scopeGeneratorFromMap(varList,fxList){\r\n  let m=new Map();\r\n  for(let [key,value] of varList){\r\n      m.set('v_'+key,value);\r\n  }\r\n  for(let [key,value] of fxList){\r\n      m.set('f_'+key,value.result);\r\n  }\r\n  return Object.fromEntries(m);\r\n  } ","import { FxClass } from './FormulaClass';\r\nimport * as Utility from './MathUtility';\r\n\r\nexport function DeepScopeGenerator(Fx){\r\n    let scope=new Map();    \r\n    for(let [key,value] of Fx.varList){\r\n        scope.set(key,value);\r\n    }\r\n    for(let [key,value] of Fx.fxList){\r\n        scope.set(key,Utility.calculateWithScope(value.expString,DeepScopeGenerator(value)));\r\n    }\r\nreturn Object.fromEntries(scope);\r\n}\r\n\r\nexport function shallowCopyFxList(fxList){\r\n    let newfxList=new Map();\r\n    for(let [key,value] of fxList){\r\n        newfxList.set(key,value);\r\n    }\r\n    return newfxList;\r\n}\r\nexport function ValidateExpression(){\r\n    return true;\r\n}\r\nexport function fxListToJson(fxList){\r\n    let sampleMap=new Map();\r\n for(let[key,value] of fxList){\r\n  sampleMap.set(key,value.toObj());\r\n }\r\n return JSON.stringify(Object.fromEntries(sampleMap));\r\n}\r\nexport function jsonToFx(json){\r\n    return objToFxClass(JSON.parse(json))\r\n    }\r\nfunction FxtoObj(Obj){\r\n    \r\n        //get serialisible fields\r\n        const {name,result,desc,expString, expDisplayString,varList,fxList} = Obj;\r\n        \r\n        //convert complex object representation JSON serialisible format\r\n        const simplefxList= Object.fromEntries(   //convert map to plain object\r\n          Array.from(\r\n            fxList.entries(),                      //transform the map\r\n            ([key, value]) => [key, value.toObj()] //convert map values to plain objects\r\n          )\r\n        );\r\n        const simplevarList=Object.fromEntries(varList);\r\n        //return plain object \r\n        return {\r\n          name,\r\n          result,\r\n          desc,\r\n          expString,\r\n          expDisplayString,\r\n          varList:simplevarList,\r\n          fxList:simplefxList\r\n      }\r\n}\r\nexport function fxClasstoJson(fxClass){\r\n    return JSON.stringify(FxtoObj(fxClass));\r\n}\r\nexport function objToFxClass(obj) {\r\n    //create a new instance\r\n    const instance = new FxClass(obj.name);\r\n    instance.result=obj.result;    instance.desc=obj.desc;\r\n    instance.expString=obj.expString;\r\n    instance.expDisplayString=obj.expDisplayString;\r\n    instance.varList=new Map(Object.entries(obj.varList));\r\n    //fill the instance `mapOfA` with the data from the input\r\n    for (const [key, value] of Object.entries(obj.fxList)) {\r\n      instance.fxList.set(key, objToFxClass(value));\r\n    }\r\n    return instance;\r\n  }\r\n\r\nexport function jsonToFxList(json){\r\n    let newMap=new Map();\r\n    let map=new Map(Object.entries(JSON.parse(json)));\r\n    for(let[key,value] of map){\r\n        newMap.set(key,objToFxClass(value));\r\n    }\r\n    return newMap;\r\n}\r\nexport function validateFunctionName(fxName,fxs){\r\n    let format = /[!@#$%^&*()+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\r\n    if(fxName==\"\"||fxName.length==0){\r\n        return {status:false,msg:\"Please enter some value.\"};\r\n    }\r\n    if(fxName.indexOf(' ') >= 0){return {status:false,msg:\"space is not allowed.\"};}\r\n    if(format.test(fxName)){\r\n        return {status:false,msg:\"special characters are not allowed.\"};\r\n    }\r\n    if(fxs.has(fxName)){\r\n        return {status:false,msg:\"\"+fxName+\" already exist.\"};\r\n    }\r\nreturn {status:true,msg:''};\r\n}\r\nexport function addFxtoStacks(expStack,expDisplayStack,elemTracker,fxName){\r\n    let l1=[...expStack];\r\n    let l2=[...expDisplayStack];\r\n    let l3=[...elemTracker];\r\n    l1.push('(f_'+fxName+')');\r\n    l2.push('<span style=\"color:orange\">'+fxName+'</span>');\r\n    l3.push('fx');\r\n    return {'expStr':l1,'expDisStr':l2,'elemTracker':l3};\r\n    }\r\n","import React,{createContext,useState} from 'react';\r\nimport * as fxUtility from './../Js/FormulaUtility';\r\nexport const ExpContext=createContext();\r\nexport const ExpProvider=({children})=>{\r\n    const [expString,setExpString1] =useState(()=>{\r\n        let a=JSON.parse(localStorage.getItem('expString'));\r\n        if(a==null)return \"\";\r\n        return a;\r\n    });\r\n    const [expDisplayString,setExpDisplayString1]=useState(()=>{\r\n        let a=JSON.parse(localStorage.getItem('expDisplayString'));\r\n        if(a==null)return \"\";\r\n        return a; \r\n    });\r\n    const [result,setResult1]=useState(()=>{\r\n        return Number(JSON.parse(localStorage.getItem('result')));\r\n    });\r\n    const [angle,setAngle]=useState('deg');\r\n    const [varList,updateVarList1]=useState(()=>{\r\n      let a=localStorage.getItem('varList');\r\n      if(a==null||a===\"undefined\"||a==\"\"){\r\n          return new Map();\r\n      }\r\n      return new Map(Object.entries(JSON.parse(a)));\r\n    });\r\n    const updateVarList=(vars)=>{\r\n    let a=Object.fromEntries(vars);\r\n    localStorage.setItem('varList',JSON.stringify(a));\r\n    updateVarList1(vars);\r\n    }\r\n    const [expStack,updateExpStack1]=useState(()=>{\r\n        let a=JSON.parse(localStorage.getItem('expStack'));\r\n        if(a==null)return [];\r\n        return a; \r\n    });\r\n    const [expDisplayStack,updateExpDisplayStack1]=useState(()=>{\r\n        let a=JSON.parse(localStorage.getItem('expDisplayStack'));\r\n        if(a==null)return [];\r\n        return a; \r\n    });\r\n    const [elemTracker,updateElemTracker1]=useState(()=>{\r\n        let a=localStorage.getItem('elemTracker');\r\n        if(a==\"\"||a==null)return [];\r\n        return JSON.parse(a);\r\n    });\r\n    const updateElemTracker=(track)=>{\r\n    updateElemTracker1(track);\r\n    localStorage.setItem('elemTracker',JSON.stringify(track));\r\n    }\r\n    const [fxList,updateFxList1]=useState(()=>{\r\n        let a=localStorage.getItem('fxList');\r\n        if(a==null||a===\"undefined\"||a==\"\")return new Map();\r\n        return fxUtility.jsonToFxList(a);\r\n    })\r\n    const [tracker,updateTracker1]=useState(()=>{\r\n       let a=JSON.parse(localStorage.getItem('tracker'));\r\n       if(a==null) return {varTracker:new Map(),fxTracker:new Map()};\r\n       return {varTracker:new Map(Object.entries(a.varTracker)),fxTracker:new Map(Object.entries(a.fxTracker))};\r\n    });\r\n    const [error,setError1]=useState(()=>{\r\n        return JSON.parse(localStorage.getItem('error'));\r\n    });\r\n    const setError=(err)=>{\r\n        localStorage.setItem('error',JSON.stringify(err));\r\n        setError1(err);\r\n    }\r\n    const setResult=(value)=>{\r\n        setResult1(value);\r\n        localStorage.setItem('result',JSON.stringify(value));\r\n    }\r\n    const setExpString=(str)=>{\r\n   localStorage.setItem('expString',JSON.stringify(str));\r\n   setExpString1(str);\r\n   if(str==\"\")setResult(0);\r\n    }\r\n    const setExpDisplayString=(str)=>{\r\n        localStorage.setItem('expDisplayString',JSON.stringify(str));\r\n        setExpDisplayString1(str);\r\n         }\r\n    const updateExpDisplayStack=(vars)=>{\r\n        localStorage.setItem('expDisplayStack',JSON.stringify(vars));\r\n        updateExpDisplayStack1(vars);\r\n         }\r\n    const updateExpStack=(vars)=>{\r\n       localStorage.setItem('expStack',JSON.stringify(vars));\r\n       updateExpStack1(vars);\r\n             }\r\n    const updateTracker=(t)=>{\r\n        let a=Object.fromEntries(t.varTracker);\r\n        let b=Object.fromEntries(t.fxTracker);\r\n        let c={varTracker:a,fxTracker:b};\r\n        let json=JSON.stringify(c);\r\n        localStorage.setItem('tracker',json);\r\n        updateTracker1(t);\r\n    }\r\n    const updateFxList=(fxList)=>{\r\n      let json=fxUtility.fxListToJson(fxList);\r\n      localStorage.setItem('fxList',json);\r\n      updateFxList1(fxList);\r\n    }\r\n    const reset=()=>{\r\n        setResult('');\r\n        setError('');\r\n        setExpDisplayString('');\r\n        setExpString('');\r\n        updateElemTracker([]);\r\n        updateExpStack([]);\r\n        updateExpDisplayStack([]);\r\n        updateTracker({varTracker:new Map(),fxTracker:new Map()});\r\n    }     \r\n    const resetAll=()=>{\r\n        reset();\r\n        updateVarList(new Map());\r\n        updateFxList(new Map());\r\n    }  \r\nreturn (\r\n    <ExpContext.Provider\r\n    value={{\r\n        reset,resetAll,\r\n        expString,setExpString,\r\n        result,setResult,\r\n        expDisplayString,setExpDisplayString,\r\n        angle,setAngle,\r\n        varList,updateVarList,\r\n        expStack,updateExpStack,\r\n        expDisplayStack,updateExpDisplayStack,\r\n        elemTracker,updateElemTracker,\r\n        fxList,updateFxList,\r\n        tracker,updateTracker,\r\n        error,setError\r\n        }}>\r\n        {children}\r\n    </ExpContext.Provider>\r\n)\r\n}\r\n","import React,{useContext} from 'react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport * as VarUtility from '../Js/VarUtility';\r\nimport KeyPadComponent from './KeyPad';\r\nimport { ExpContext } from './SampleContext';\r\nimport * as MathUtility from '../Js/MathUtility';\r\nimport * as KeypadUtility from '../Js/KeyPadUtility';\r\nimport './../css/theme.css';\r\nexport function CalculatorPad(props){\r\n    let context=useContext(ExpContext);\r\n    let err='';\r\n    const setResult=(arr1,arr2)=>{\r\n        context.updateExpStack(arr1);\r\n        context.updateExpDisplayStack(arr2);\r\n        let Texpstring=MathUtility.arrayToString(arr1);\r\n        let scope=MathUtility.scopeGeneratorFromMap(context.varList,context.fxList);\r\n        let r=MathUtility.calculateWithScope(Texpstring,scope);\r\n        context.setExpString(Texpstring);\r\n        let Texpdisstring=MathUtility.arrayToString(arr2);\r\n        context.setExpDisplayString(Texpdisstring);\r\n        if(r.status!='ok'){\r\n          context.setError(true);\r\n        }else{\r\n          context.setResult(r.result);\r\n          context.setError(false);\r\n        }\r\n    }\r\n\r\n    const postBackspace=(opr,name)=>{\r\n      let t;\r\n      if(opr=='var'){\r\n      let n=name.substring(3,name.length-1);\r\n      t=VarUtility.expTracker(context.tracker,'removeVar',n);\r\n      context.updateElemTracker(t);\r\n      context.updateTracker(t);\r\n      }\r\n      if(opr=='fx'){\r\n      let n=name.substring(3,name.length-1);\r\n      t=VarUtility.expTracker(context.tracker,'removeFx',n);\r\n      context.updateElemTracker(t);\r\n      context.updateTracker(t);\r\n      }\r\n\r\n    }\r\n    const reset=()=>{\r\n    context.reset();\r\n    }\r\n    const keypadClickHandler=(event)=>{\r\n    let key=event.name;\r\n    if(key==\"reset\") {reset();return;}\r\n    let arr=[...context.expStack];\r\n    let arr2=[...context.expDisplayStack];\r\n    let arr3=[...context.elemTracker];\r\n    let a= KeypadUtility.OnkeypadClick(key,arr,arr2,arr3,postBackspace);\r\n    setResult(a.expStr,a.expDisStr);\r\n    context.updateElemTracker(a.elemTracker);\r\n    }\r\n    \r\n    const ValidateNewFx=()=>{\r\n    if(context.expString.length==0){\r\n      alert(\"please write expression\");\r\n      return;\r\n    }\r\n    if(context.error){\r\n      alert(\"Invalid Expression\");\r\n      return;\r\n    }\r\n    if(!(context.elemTracker.includes('var')||context.elemTracker.includes('fx'))){\r\n      alert(\"Expression should have at least one variable value\");\r\n      return;\r\n    }\r\n    props.OnAddFxClick();\r\n    }\r\n    return (\r\n        <div className=\"theme-box-border w-100\">         \r\n            <div className=\"bg-dark text-center\">\r\n            <span className=\"px-3\"><i style={{color:context.error?'red':'green'}}className=\"bi bi-circle-fill\" title=\"Invalid Expression\"></i></span>\r\n            <span className=\"text-white font-monospace\">Calculator PAD</span>\r\n            </div>\r\n         <div className=\"w-100\">\r\n             <div className=\"row p-2\">\r\n             <div className=\"col-1\"></div>\r\n            <div className=\"col-9 border-bottom border-dark\">\r\n            <span className=\"text-break\" style={{letterSpacing:'1px',overflowX:'scroll'}}>{ReactHtmlParser(context.expDisplayString)}</span>\r\n           </div>\r\n           <div className=\"col-2\"><button className=\"btn btn-dark\" onClick={ValidateNewFx}>E+</button> </div>\r\n           </div>\r\n           <div className=\"row p-2\">\r\n             <div className=\"col-1\"></div>\r\n            <div className=\"col-9 border-bottom border-dark\">\r\n             <br/>\r\n            <span>Ans={context.expString.length>0?context.result:'0'}</span><br/>\r\n           </div>\r\n           <div className=\"col-2\"><button onClick={props.displayModalgetVarName} className=\"btn btn-dark\">V+</button> </div>\r\n           </div>\r\n         </div>\r\n         <KeyPadComponent onClick={keypadClickHandler} angle={context.angle} setAngle={context.setAngle}/>\r\n        </div>\r\n    )\r\n}","import {config} from './MathUtility';\r\n\r\nexport function OnkeypadClick(bname,expStack,expDisplayStack,elemTracker,postBackspace){\r\n\r\n       if(bname===\"undefined\"){\r\n   \r\n       }\r\n       else if(bname === \"=\"){\r\n       }\r\n       else if(bname === \"C\"){\r\n           expStack=[];\r\n           expDisplayStack=[];\r\n           elemTracker=[];\r\n       }   \r\n       else if(bname === \"CE\"){\r\n           let name=expStack.pop();\r\n           expDisplayStack.pop();\r\n           let o=elemTracker.pop();\r\n           postBackspace(o,name);\r\n       }\r\n       else if(bname===\"root\"){\r\n           expStack.push('sqrt(');\r\n           expDisplayStack.push('&#8730;(');\r\n           elemTracker.push('opr');\r\n       }else if(bname===\"/\"){\r\n           expStack.push('/');\r\n           expDisplayStack.push('&#247;');\r\n           elemTracker.push('opr');\r\n       }else if(bname===\"log\"){\r\n           expStack.push('log10(');\r\n           expDisplayStack.push('log(');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='ln'){\r\n           expStack.push('ln(');\r\n           expDisplayStack.push('ln(');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='pi'){\r\n           expStack.push('pi');\r\n           expDisplayStack.push('&#x3C0;');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='pow'){\r\n           expStack.push('^');\r\n           expDisplayStack.push('^');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='sin'){\r\n           expStack.push('sin(');\r\n           expDisplayStack.push('Sin(');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='asin'){\r\n           expStack.push('asin(');\r\n           expDisplayStack.push('Sin<sup>-1</sup>(');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='cos'){\r\n           expStack.push('cos(');\r\n           expDisplayStack.push('Cos(');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='acos'){\r\n           expStack.push('cos(');\r\n           expDisplayStack.push('Cos<sup>-1</sup>(');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='tan'){\r\n           expStack.push('tan(');\r\n           expDisplayStack.push('tan(');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='atan'){\r\n           expStack.push('atan(');\r\n           expDisplayStack.push('Tan<sup>-1</sup>(');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='*'){\r\n           expStack.push('*');\r\n           expDisplayStack.push('&#215;');\r\n           elemTracker.push('opr');\r\n       }\r\n       else if(bname==='deg'){\r\n          config.angles='deg';\r\n       }\r\n       else if(bname==='rad'){\r\n           config.angles='rad';\r\n        }\r\n       else {\r\n          expStack.push(bname);\r\n          expDisplayStack.push(bname);\r\n          elemTracker.push('val');\r\n       }\r\n       \r\n       return {'expStr':expStack,'expDisStr':expDisplayStack,'elemTracker':elemTracker}\r\n   } ","import * as VarUtility from '../Js/VarUtility';\r\nimport {useContext} from 'react';\r\nimport { ExpContext } from './SampleContext';\r\nimport './../css/theme.css';\r\nexport function VarHolder(props){\r\n      \r\n    return(\r\n       <table style={{width:'100%'}}>\r\n           <tr>\r\n               <td><span title={props.name} style={{maxWidth:'100px', overflow:'hidden',whiteSpace:\"nowrap\",display:'inline-block',textOverflow:'ellipsis'}}>{props.name}</span></td><td>=</td>\r\n               <td><input className=\"input w-100\" name={props.name} value={props.value} onChange={props.valueChange}/></td>\r\n           </tr>\r\n       </table>\r\n    )\r\n    }\r\nexport function VarListHolder(props){\r\n    const context=useContext(ExpContext);\r\n    const vars=[];\r\n    const varValueChangeHandler=(event)=>{\r\n      let value=event.target.value;\r\n      let name=event.target.name;\r\n      let lst=VarUtility.copyVarMap(context.varList);\r\n      lst.set(name,value);\r\n      context.updateVarList(lst);\r\n      props.OnVarChange(lst);\r\n    }\r\n\r\n    const deleteVar=(varName)=>{\r\n     if(context.varList.has(varName)){\r\n         if(context.tracker.varTracker.has(varName)){alert(varName+\" is in use. Can't delete\"); return;}\r\n         let varList=VarUtility.copyVarMap(context.varList);\r\n         varList.delete(varName);\r\n         context.updateVarList(varList);\r\n     }\r\n    }\r\n    const OndeleteVar=(event)=>{\r\n        let name=event.target.name;\r\n        deleteVar(name);\r\n     }\r\n    for(let [key,value] of context.varList){\r\n    vars.push(\r\n    <tr>\r\n        <td><button className=\"bi bi-plus\" name={key} onClick={props.OnaddVarClick}></button></td>\r\n        <td><VarHolder name={key} value={value} valueChange={varValueChangeHandler}/></td>\r\n        <td><button onClick={OndeleteVar} name={key} className=\"btn btn-secondary bi bi-trash\"></button></td>\r\n        </tr>);\r\n    }\r\nreturn (\r\n    <div className=\"w-100 theme-box-border shadow h-100\">\r\n        <div style={{color:'#8c96e7'}} className=\"bg-dark font-monospace text-center\">Variables</div>\r\n        \r\n        <table>\r\n            <tr><td></td><td></td><td></td></tr>\r\n            {vars}\r\n        </table>\r\n    </div>\r\n)\r\n}\r\n","import { useState, useContext} from \"react\"\r\nimport { ExpContext } from \"./SampleContext\";\r\nimport {validateVarName} from './../Js/VarUtility';\r\nimport {validateFunctionName} from './../Js/FormulaUtility';\r\nimport './../css/theme.css';\r\nexport function PopupFrame(props){\r\n\r\n    return (\r\n        <div style={{width:'100%',position:'fixed',height:'100vh',backgroundColor:'transparent',display:props.display?'flex':'none',flexDirection:'column',justifyContent:'space-around'}}>\r\n            <div style={{top:'25%',display:\"flex\",justifyContent:'space-around'}}>\r\n                <div>\r\n                <div className=\"theme-box-border\">\r\n                    <div className=\"bg-dark\"> \r\n                      {props.heading}\r\n                    </div>\r\n                    <button className=\"btn btn-dark align-content-end\">X</button>\r\n                </div>\r\n               {props.children}\r\n               </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport function ModelGetVarName(props){\r\n    let context=useContext(ExpContext);\r\n    let [input, setInput]=useState('');\r\n    let [error, setError]=useState('');\r\n    const inputEventHandler=(event)=>{\r\n        let name=event.target.value;\r\n        setInput(name);\r\n        let st=validateVarName(name,context.varList);\r\n        if(!st.status){\r\n            setError(st.msg);\r\n            return;\r\n        }\r\n        setError('');\r\n    }\r\n    const SaveVariableHandler=()=>{\r\n        if(validateVarName(input,context.varList).status){\r\n            props.OnSave(input);\r\n        }\r\n    }\r\n    return(\r\n        <> \r\n            <input className=\"input\" value={input} onChange={inputEventHandler} placeholder=\"Variable Name\"/>\r\n            <button className=\"btn btn-success\" {...error.length>0?'disabled':''} onClick={SaveVariableHandler}>Save</button>\r\n            <div className=\"text-center text-danger\">{error}</div>\r\n        </>\r\n    )\r\n}\r\nexport function ModelGetFxName(props){\r\n    let context=useContext(ExpContext);\r\n    const[input,setInput]=useState('');\r\n    const[msg,setMsg]=useState('');\r\n   \r\n    const OnInputChange=(event)=>{\r\n    let value=event.target.value;\r\n    setInput(value);\r\n    let s=validateFunctionName(value,context.fxList);\r\n    if(!s.status){\r\n    setMsg(s.msg);\r\n    }else{\r\n        setMsg('');\r\n    }\r\n    }\r\n    const OnSaveClick=()=>{\r\n     if(!validateFunctionName(input,context.fxList).status) return;\r\n     let name=input;\r\n     props.OnSave(name);\r\n    }\r\nreturn (\r\n    <>\r\n        <input className=\"input d-inline-block w-50 m-2\" value={input} onChange={OnInputChange}/><button onClick={OnSaveClick} className=\"bg-dark rounded text-white font-monospace\" style={{width:'60px',height:'30px'}}>Save</button>\r\n        <div className=\"text-danger\">{msg}</div>\r\n    </>\r\n)\r\n}","import { useContext, useState } from \"react\"\r\nimport HtmlParser from \"react-html-parser\";\r\nimport { ExpContext } from \"./SampleContext\"\r\nimport * as Utility2 from '../Js/VarUtility';\r\nimport * as MathUtility from '../Js/MathUtility';\r\nimport * as FxUtility from '../Js/FormulaUtility';\r\nimport './../css/theme.css';\r\nexport function FxHolder(props){\r\nlet fxData=props.data;\r\nconsole.log(fxData);\r\nlet [isExpanded,setExpanded]=useState(false);\r\nconst onExpandeChange=()=>{\r\n    setExpanded(!isExpanded);\r\n}\r\nlet  vars=[];\r\nconst OnFxChange=()=>{\r\n    let scope=MathUtility.scopeGeneratorFromMap(fxData.varList,fxData.fxList);\r\n    let r=MathUtility.calculateWithScope(fxData.expString,scope);\r\n    if(r.status!==\"ok\"){\r\n\r\n    }else{\r\n        fxData.result=r.result;\r\n        props.OnFxChange();\r\n    }\r\n}\r\n\r\nconst onVarChange=(event)=>{\r\nlet name=event.target.name;\r\nlet value=event.target.value;\r\nlet varmap=Utility2.copyVarMap(fxData.varList);\r\nvarmap.set(name,value);\r\nconsole.log(\"fx var list\");\r\nconsole.log(varmap);\r\nfxData.varList=varmap;\r\nlet scope=MathUtility.scopeGeneratorFromMap(fxData.varList,fxData.fxList);\r\nlet r=MathUtility.calculateWithScope(fxData.expString,scope);\r\nif(r.status!==\"ok\"){\r\n\r\n}else{\r\n    fxData.result=r.result;\r\n    props.OnFxChange();\r\n}\r\n}\r\nfor(let [key,value] of fxData.varList){\r\nvars.push(<div>{key}=<input name={key} onChange={onVarChange} className=\"input w-75\" value={value}/></div>)\r\n}\r\nlet fxs2=[];\r\nfor(let [key,value] of fxData.fxList){\r\n    fxs2.push(<FxHolder OnFxChange={OnFxChange} name={key} data={value}/>)\r\n    }\r\nreturn (\r\n<div className=\"w-100 dark\">\r\n<table>\r\n    <tr>\r\n        <td><button className={isExpanded?\"bi b\":\"bi bi-arrows-collapse\"} onClick={onExpandeChange}></button></td>\r\n        <td><span>{HtmlParser(fxData.expDisplayString)}</span></td>\r\n        <td>{fxData.result}</td>\r\n    </tr>\r\n</table>\r\n<div style={{display:isExpanded?'block':'none'}}>\r\n<div className=\"d-flex b\">{vars}</div>\r\n{fxs2} \r\n</div>\r\n</div>\r\n)\r\n}\r\nexport function FxListHolder(props){\r\n    const context=useContext(ExpContext);\r\n    const OnFxChange=()=>{\r\n    let fxCopy= FxUtility.shallowCopyFxList(context.fxList);\r\n    context.updateFxList(fxCopy);\r\n    props.OnFxChange();\r\n    }\r\n\r\n    const OnDeleteFx=(event)=>{\r\n    let fxName=event.target.name;\r\n    if(context.tracker.fxTracker.has(fxName)){\r\n        alert(\"Can't delete \"+fxName+\". It's in Use\");\r\n        return;\r\n    }\r\n    let fxlist=FxUtility.shallowCopyFxList(context.fxList);\r\n    fxlist.delete(fxName);\r\n    context.updateFxList(fxlist);\r\n    }\r\n\r\n    let fxList=context.fxList;\r\n    let fxs=[];\r\n    for(let [key,value] of fxList){\r\n        fxs.push(\r\n        <tr>\r\n            <td><button className=\"add-var-button\" name={key} onClick={props.OnAddFx}></button></td>\r\n            <td><div style={{display:\"flex\"}}><span>{key}={value.result}</span></div></td>\r\n            <td><button name={key} onClick={OnDeleteFx} className=\"btn btn-info bi bi-trash\"></button></td>\r\n            </tr>\r\n        );\r\n        fxs.push(\r\n            <tr>\r\n                <td colSpan=\"3\">\r\n                <FxHolder OnFxChange={OnFxChange} name={key} data={value}/> \r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\nreturn (\r\n    <div className=\"theme-box-border h-100 shadow\">\r\n        <div className=\"text-center bg-dark w-100\">\r\n         <div style={{color:'#fa8926'}} className=\"font-monospace\">Formulas</div>\r\n         <div style={{fontSize:'small'}} className=\"text-center text-white fst-italic\">{fxList.size>0?''+fxList.size+' formulas':'No formula'}</div>\r\n        </div>\r\n        <table style={{width:'100%'}}>\r\n            <tr><td></td><td></td><td></td></tr>\r\n            {fxs}\r\n        </table>\r\n    </div>\r\n)\r\n}","import React,{useContext,useEffect,useState} from 'react';\r\nimport {CalculatorPad} from './Components/CalculatorPad';\r\nimport {ExpContext} from './Components/SampleContext';\r\nimport * as VarUtility from './Js/VarUtility';\r\nimport * as MathUtility from './Js/MathUtility';\r\nimport { VarListHolder } from './Components/VarListHolder';\r\nimport {PopupFrame,ModelGetVarName,ModelGetFxName} from './Components/PopupFrame';\r\nimport { FxListHolder } from './Components/FormulaComponent';\r\nimport * as FxUtility from './Js/FormulaUtility';\r\nimport './css/theme.css';\r\nimport { FxClass } from './Js/FormulaClass';\r\nexport function AppV2(){\r\n    const context=useContext(ExpContext);\r\n    const [displayVarModal,setDisplayVarModal]=useState(false);\r\n    const [displayFxModal,setDisplayFxModal]=useState(false);\r\n\r\n    useEffect(()=>{\r\n      document.title=context.result;\r\n      \r\n    });\r\n\r\n    useEffect(()=>{\r\n      \r\n    })\r\n    const OnaddVarClick=(event)=>{\r\n      let name=event.target.name;\r\n      let st=VarUtility.addVarToStacks(context.expStack,context.expDisplayStack,context.elemTracker,name);\r\n      let t=VarUtility.expTracker(context.tracker,'addVar',name);\r\n      setResult(st.expStr,st.expDisStr);\r\n      context.updateElemTracker(st.elemTracker);\r\n      context.updateTracker(t);\r\n      }\r\n\r\n    const OnAddFx=(event)=>{\r\n      let name=event.target.name;\r\n      let st=FxUtility.addFxtoStacks(context.expStack,context.expDisplayStack,context.elemTracker,name);\r\n      let t=VarUtility.expTracker(context.tracker,'addFx',name);\r\n      setResult(st.expStr,st.expDisStr);\r\n      context.updateElemTracker(st.elemTracker);\r\n      context.updateTracker(t);\r\n    }\r\n\r\n    const OnVarChange=(list)=>{\r\n      let scope=MathUtility.scopeGeneratorFromMap(list,context.fxList);\r\n      let r=MathUtility.calculateWithScope(context.expString,scope);\r\n      if(r.status!='ok'){\r\n        context.setError(true);\r\n      }else{\r\n        context.setResult(r.result);\r\n        context.setError(false);\r\n      }\r\n    }\r\n\r\n    const OnFxChange=()=>{\r\n      let scope=MathUtility.scopeGeneratorFromMap(context.varList,context.fxList);\r\n      let r=MathUtility.calculateWithScope(context.expString,scope);\r\n      if(r.status!='ok'){\r\n        context.setError(false);\r\n      }else{\r\n        context.setResult(r.result);\r\n        context.setError(true);\r\n      }\r\n    }\r\n    const setResult=(arr1,arr2)=>{\r\n        context.updateExpStack(arr1);\r\n        context.updateExpDisplayStack(arr2);\r\n        let Texpstring=MathUtility.arrayToString(arr1);\r\n        let scope=MathUtility.scopeGeneratorFromMap(context.varList,context.fxList);\r\n        let r=MathUtility.calculateWithScope(Texpstring,scope);\r\n        context.setExpString(Texpstring);\r\n        let Texpdisstring=MathUtility.arrayToString(arr2);\r\n        context.setExpDisplayString(Texpdisstring);\r\n        if(r.status!='ok'){\r\n          context.setError(true);\r\n        }else{\r\n          context.setResult(r.result);\r\n          context.setError(false);\r\n        }\r\n    }\r\n    const displayModalgetVarName=()=>{\r\n          setDisplayVarModal(true);\r\n    } \r\n    const displayModalgetFxName=()=>{\r\n      setDisplayFxModal(true);\r\n     }  \r\n    const closeModal=()=>{\r\n      setDisplayVarModal(false);\r\n      setDisplayFxModal(false);\r\n    }\r\n    const AddNewVar=(varName)=>{\r\n     let lst=VarUtility.copyVarMap(context.varList);\r\n     lst.set(varName,context.result);\r\n     context.updateVarList(lst);\r\n     closeModal();\r\n\r\n    }\r\n   const ClearAllHandler=()=>{\r\n   context.resetAll();\r\n   }\r\n    const AddNewFx=(fxName)=>{\r\n      let newFx=new FxClass(fxName);\r\n      newFx.expString=context.expString;\r\n      newFx.expDisplayString=context.expDisplayString;\r\n      newFx.result=context.result;\r\n      VarUtility.updateFxWithTracker(context.tracker,newFx,context.varList,context.fxList);\r\n      let fxList=FxUtility.shallowCopyFxList(context.fxList);\r\n      fxList.set(fxName,newFx);\r\n      context.updateFxList(fxList);\r\n      closeModal();\r\n    }\r\n    return(\r\n        <div className=\"\">\r\n          <PopupFrame display={displayVarModal} closeModal={closeModal}>\r\n            <ModelGetVarName OnSave={AddNewVar}/>\r\n          </PopupFrame>\r\n          <PopupFrame display={displayFxModal} closeModal={closeModal}>\r\n            <ModelGetFxName OnSave={AddNewFx}/>\r\n          </PopupFrame>\r\n            <div className=\"text-center app-header\">\r\n            <h1> <div className=\"d-inline-block icon-rotate\"><i className=\"bi bi-lightning-charge-fill\"></i></div>\r\n            <div className=\"app-header-name\" style={{display:'inline-block',fontFamily:'Rancho, serif'}}>Express Calculator</div>\r\n            </h1> \r\n            <div>\r\n            <button onClick={ClearAllHandler}>ClearAll</button></div>\r\n            </div>\r\n           <div className=\"container-fluid\">\r\n           <div className=\"row\">\r\n           <div className=\"col-sm-4 col-md-4\">\r\n             <div style={{display:'flex',flexDirection:'column'}}>\r\n               <div></div>\r\n               <div style={{alignContent:'flex-end'}}>\r\n             <CalculatorPad displayModalgetVarName={displayModalgetVarName} OnAddFxClick={displayModalgetFxName}/>\r\n             </div>\r\n             </div>\r\n           </div>\r\n           <div className=\"col-sm-4\">\r\n             <FxListHolder OnAddFx={OnAddFx} OnFxChange={OnFxChange} />\r\n           </div>\r\n           <div className=\"col-sm-3 col-md-3\">\r\n             <VarListHolder OnaddVarClick={OnaddVarClick} OnVarChange={OnVarChange} />  \r\n           </div>\r\n           </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {AppV2} from './App';\nimport {ExpProvider} from './Components/SampleContext';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <>\n  <ExpProvider><AppV2/></ExpProvider>\n    \n    </>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}